<?php
$view->title = 'Tài khoán';
?>
@section('js_pos')
    <script type="text/babel">


        const App = () => {
            const initialState = {
                modalTitle: '',
                modalVisible: false,
                users: [],
                pagination: {},
                uploading: false,
                loading: false,
                searchValue: ''
            }
            const [state, setState] = useState(initialState);
            const [form] = Form.useForm();
            const onSubmit = async (data) => {
                if (typeof data.id !== "undefined") {
                    await Users.update(data);
                } else {
                    await Users.create(data);
                }
                await updateState({loading: false});
            }
            const changePage = async ({current}) => {
                await updateState({}, current);
            }
            const updateState = async (obj = {}, page = 1) => {
                setState({
                    ...state,
                    ...{
                        loading: true
                    }
                });
                const {pagination, data} = await Users.fetch();
                setState({
                    ...state,
                    ...Object.assign({
                        users: data,
                        pagination: pagination,
                        loading: false
                    }, obj)
                });
            }
            const onDelete = async (id) => {
                Users.delete(id).then(() => updateState());
            }
            const setSearchValue = e => {
                setState({
                    ...state,
                    ...{
                        searchValue: e.target.value
                    }
                })
            }
            const searchArchive = async () => {
                await updateState({
                    name: state.searchValue
                });
            }
            useEffect(async () => {
                await updateState();
            }, []);

            return (
                <div className="mb-5">
                    <Row gutter={[8, 0]}>
                        <Col md={8}>
                            <Card title="Thêm tài khoản">
                                <Form layout={`vertical`} onFinish={onSubmit} form={form} id={'categoryForm'}>
                                    <Form.Item name={'id'} hidden><Input/></Form.Item>
                                    <Form.Item
                                        name={'username'}
                                        label={`Tên đăng nhập`}
                                        rules={[{required: true, message: 'Tên đăng nhập bắt buộc!'}]}
                                    >
                                        <Input/>
                                    </Form.Item>
                                    <Form.Item
                                        initialValue={10}
                                        name={'status'}
                                        label={`Trạng thái`}
                                    >
                                        <Select>
                                            <Select.Option value={10}>Kích hoạt</Select.Option>
                                            <Select.Option value={0}>Ẩn</Select.Option>
                                        </Select>
                                    </Form.Item>
                                    <Form.Item
                                        name={'email'}
                                        label={`Email`}
                                        rules={[{required: true, message: 'Email bắt buộc!'}]}
                                    >
                                        <Input/>
                                    </Form.Item>
                                    <Form.Item
                                        name={'password_hash'}
                                        label={`Mật khẩu`}
                                        rules={[{required: true, message: 'Mật khẩu bắt buộc!'}]}
                                    >
                                        <Input.Password/>
                                    </Form.Item>
                                    <Divider/>
                                    <div className="text-right">
                                        <small className="text-danger mr-2">* thông tin bắt buộc</small>
                                        <Button htmlType={`submit`}>Lưu</Button>
                                    </div>
                                </Form>
                            </Card>
                        </Col>
                        <Col md={16}>
                            <Card title={`Danh sách tài khoản`}
                                  extra={
                                      <div className="d-flex">
                                          <Input onChange={setSearchValue} placeholder="Tìm kiếm tên....." name="s"/>
                                          <Button onClick={searchArchive} className="ml-2"><i
                                              className="icon-search"/></Button>
                                      </div>
                                  }
                            >
                                <Spin tip="Loading..." spinning={state.loading}>
                                    <Table
                                        size={`small`}
                                        dataSource={state.users}
                                        pagination={state.pagination}
                                        onChange={changePage}
                                        columns={[
                                            {title: 'Tên đăng nhập', dataIndex: 'username', key: 'username'},
                                            {title: 'Email', dataIndex: 'email', key: 'email'},
                                            {title: 'Quyền quản trị', dataIndex: 'role', key: 'role'},
                                            {
                                                title: 'Ngày tạo', dataIndex: 'created_at', key: 'created_at',
                                                render: created_at => moment.unix('DD/MM/YYYY', created_at)
                                            },
                                            {
                                                title: 'Trạng thái',
                                                dataIndex: 'status', key: 'status',
                                                render: status => <span
                                                    className={`badge badge-pill badge-sm badge-${status == 10 ? 'success' : 'secondary'}`}>
                                                {status == 10 ? 'Kích hoạt' : 'Ản'} </span>
                                            },
                                            {
                                                title: '', dataIndex: 'action', key: 'action', render: (text, raw) => {
                                                    return (
                                                        <div>
                                                            <Button onClick={() => onUpdate(raw)} type="primary"
                                                                    className={`mr-1`} size={`small`}><i
                                                                className="icon icon-edit"/></Button>
                                                            <Popconfirm
                                                                disabled
                                                                title="Xóa tài khoản hiện tại"
                                                                onConfirm={() => onDelete(raw.id)}
                                                                okText="Xóa"
                                                                cancelText="Hủy"
                                                            >
                                                                <Button disabled type="dashed" danger size={`small`}><i
                                                                    className="icon icon-trash"/></Button>
                                                            </Popconfirm>
                                                        </div>
                                                    )
                                                }
                                            },
                                        ]}
                                    />
                                </Spin>
                            </Card>
                        </Col>
                    </Row>
                </div>
            )
        }
    </script>
@stop
